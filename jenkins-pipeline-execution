### TRIGGERS ### ****************************************************

#Triggers can be implemented in three ways
  # General Configuration of the Project

  # Scripted Pipeline
    # Example: Building a Project
    # after other projects are built
    properties([
      pipelineTriggers([
        upstream(
          threshold: hudson.model.Result.SUCCESS,
          upstreamProjects: 'Job1'
        )
      ])
    ])

    # Example: Build periodically
    properties([pipelineTriggers([cron('0 9 * * 1-5')])])

    # Example: Github Hook Trigger for GitSCM polling
    # Used to trigger a build when git push initiated
    properties([pipelineTriggers([githubPush()])])

    # Example: Poll SCM periodically
    properties([pipelineTriggers([pollSCM('*/30 * * * *')])])

  # Declarative Pipeline

    # Example: Build periodically
    triggers { cron(0 9 * * 1-5) 

    # Example: Poll SCM periodically
    triggers { pollSCM(*/30 * * * *) }

    # Example: Trigger builds remotely by 
    # accessing a specific URL for the given
    # job on the Jenkins system

### USER INPUT ### ****************************************************

# Prompt user with message
input 'Continue with the final stage?'

# Give the user a variety of choices
def choice = input message: '<message>', 
 parameters: [choice(choices: "choice1\nchoice2\nchoice3\nchoice4\n",
 description: 'Choose one of the following options', name: 'Options')]

# Boolean
def answer = input message: '<message>', 
 parameters: [booleanParam(defaultValue: true, 
 description: 'Prerelease setting', name: 'prerelease')]

# Choosing a file to use with the pipeline
def selectedFile = input message: '<message>', 
 parameters: [file(description: 'Choose file to upload', name: 'local')]

# Multiline string
def lines = input message: '<message>', 
 parameters: [text(defaultValue: '''line 1
 line 2
 line 3''', description: '', name: 'Input Lines')]
