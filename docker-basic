#Snapshot a container
docker ps (Show docker containers that have been stopped with -f "status=exited")
docker commit <container id> <snapshot name>
docker run -t -i <snapshot name> <command in container> -p <port number> -d

#Verify Docker installed correctly
docker run hello-world

#Show docker images
docker images

#Remove snapshot
docker rmi <snapshot name>

#Rename docker container
docker rename <current_name> <new_name>

#Stopping a docker instance
docker stop <container id>

#Get the machine's IP
docker-machine IP

#Look at properties of container
docker container inspect <Container name>

#Display current networks
docker network ls

#Look at network properties for a particular network
docker network inspect bridge

#Stop all docker containers running
docker stop $(docker ps -a -q)

#Remove all docker containers
docker rm $(docker ps -a -q)

###Docker File example###
#Base image
FROM python:<Python version>
MAINTAINER John Smith <john.smith4502@gmail.com>

ENV INSTALL_PATH /<install path name>
#Copies local files into the container
COPY requirements.txt requirements.txt

#Command ran when the image is started
ENTRYPOINT ["ping"]
#Command arguments passed to ping
CMD ["8.8.8.8", "-c", "3"]

#Valid Linux shell command
RUN pip install -r requirements.txt

#Copies current directory into Docker image
COPY ..

#Listen on a specific network port on docker (Default TCP)
EXPOSE <port> | <port>/<protocol>

#
CMD gunicorn -b 0.0.0.0:<port number> --access-logfile 

#Exporting a container
docker export <container_name> | gzip <container_export_name>.gz

#Importing a container
scp <container_export_name>.gz <docker_user>@<docker_ip>:/home/<docker_user>
zcat <container_export_name>.gz | docker import - <container_name>
docker run -i -t <container_name> /bin/bash